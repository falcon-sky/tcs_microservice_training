Day 1 : done
Introduction To microservice---done
Java essential for micro service---done
Build tools maven---done
Docker basic introduction---done
Tools for code – Intellij---done

Day 2 : done

Environment Setup
Java Installation
Maven Installation
Intellij Setup
Docker Installation
Postman Setup
Git setup
Cygwin setup
Hand-on lab on tools.

Day 3 : done

Micro Services Architecture----done
12 Factor Apps--done
Microservice design pattern and its implementation--done
SpringBoot introduction--done
Service Distribution--done
Security--done
Create Simple spring boot Application---done

Day 4: done

Create Rest Api Springboot and its usage--done
Microservice Containerization
Benefit and usage of Containerization
Micro service in cloud world
Lab on Docker containerization.

Day 5 : done
 Spring Boot : Annotation-- done
 Dependency Injection--done
• Lab With Spring boot annotation and DI

Day  6: done
 Spring Boot : properties
 Spring boot environment variable---done
 Deep dive to spring.io---done
 DI with Spring Boot--done
• Lab With Spring boot annotation and environment

Day 7 : done
REST API:
• Spring Boot REST Controller
 • GET API • POST/PUT API
Lab on GET POST and PUT

Day 8:
REST API:
 • DELETE API • Path Parameters ---done
 • Header Parameters----done
 • Query Parameters----done
Lab to create Full controller Rest Api Microservice

Day 9 : done
SQL Data Base With SpringBoot :
• SQL database (Mysql)
• Spring Data Library  Crud repository
• SQL • Database Configuration
 • Lab With Spring boot and Database SQL

Day 10 : done
NOSql Data Base With SpringBoot :

• Nosql database
• Spring Data Library  Mongo repository
• MongoDB • Database Configuration
 • Lab With Spring boot Nosql

Day 11: done
 • Design patterns : done
   Service discovery, done
   Load balancer, done
   Circuit breaker, done
   API Gateway. done
Eureka service Discovery load balancing: done
• Lab with Service discovery  done

Day 12: Micro service Inter Communication
• Inter communication between micro service - with security and handshaking mechanism examples
• Micro service Messaging
• ActiveMQ Producers
• ActiveMQ Consumers
• Lab with message communication activemq

Day 13: Micro service Testing:
• Automated unit testing
• Component test • Integration test
• Spring Security (using jwt)

Day 14 : Docker
• Introduction to Docker
• Architecture
• Dockerhub and registry
• Dockerfile • Docker compose
• Images and containers

Day 15: Deployment
 Deployments of microservices over cloud environments (AWS or Azure, any one)
Day 16: Mini project